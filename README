SerialDriver is library for connecting and managing arduino based hardware through serial port.

How it works:
It has a service, waiting for your commands on Queue object.

How to use:
Just add it to your project as Module and drive.
For detail instructions see https://github.com/ant2012/SerialDriver/wiki/Quick-Start-Guide

Examples:
Library includes some classes, implementing protocol for managing 2-wheel robot.
See under arduino2wd dir.
And see our WebRC project using this library to drive robot from html5 control.

Library structure:
SerialDriver
|--.idea             // IntelliJIDEA project files
|--src
   |--net.ant.rc.serial  // Main package
      |--arduino2wd                          // Example for 2-wheel robot
         |--Arduino2WDEachWheelCommand.java  // EachWheelCommand.java implementation
         |--Arduino2WDSerialDriver.java      // SerialDriver.java implementation
         |--Chassis2WD.ino                   // Arduino firmware for 2WD
      |--exception                             // SerialDriver Exceptions
         |--CommPortException.java             // All RXTX related exceptions
         |--UnsupportedHardwareException.java  // On unknown FW version received from FW
      |--Battery.java                  // Power supply descriptor
      |--Command.java                  // Command base class (between Lib and your app)
      |--EachWheelCommand.java         // Base message class for Arduino
      |--SerialCommunicator.java       // Sends command to COM port & waits for an answer
      |--SerialDriver.java             // Driver abstraction class (for unification)
      |--SerialHardwareDetector.java   // Use it to initialize SerialDriver
      |--SerialService.java            // Hangs on Queue waiting for your commands
      |--TractorCommand.java           // Tractor style Command.java implementation
      |--VectorCommand.java            // Vector  style Command.java implementation
   |--log4j.properties  // Config file for standalone debugging
   |--Main.java         // Main class for standalone debugging
|--README            // You are right here! Alloha! ))
|--SerialDriver.iml  // IntelliJIDEA project
